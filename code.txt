

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
//Je zou m zelf maar niet kunnen maken en het dus maar aan lucas moeten vragen
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.event.MouseInputAdapter;

public class VierOpEenRij extends JFrame {
	public static void main( String[] args ) {
		JFrame frame = new VierOpEenRij();
		frame.setSize( 1000, 800 );
		frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
		frame.setTitle( "Vier op een rij" );
		JPanel paneel = new Paneel();
		frame.setContentPane(paneel);
		frame.setVisible( true );
	}
}

class Paneel extends JPanel {
	Color kleurBord, kleurBordRondjes, kleurRood, kleurGeel;
	Color [] [] kleurArrayBord;
	boolean [] [] kleurBordControl;
	int rij, kolom, x, y;
	int[] arrayTellerRijGeel, arrayTellerRijRood, arrayTellerKolomGeel, arrayTellerKolomRood;
	boolean boolBeurt = true;
	boolean gewonnenRood, gewonnenGeel = false;
	String Uitslag = "";

	public Paneel() {
		MyListener myListener = new MyListener();
		addMouseListener(myListener);
		kleurBord = new Color(80,80,255);
		kleurBordRondjes = new Color(255,255,255);
		kleurRood = new Color(255, 0, 0);
		kleurGeel = new Color(255,255,0);
		kleurArrayBord = new Color[6] [7]; 
		kleurBordControl = new boolean [6] [7];
		arrayTellerRijGeel = new int[6];
		arrayTellerRijRood = new int[6];
		arrayTellerKolomGeel = new int[7];
		arrayTellerKolomRood = new int[7];
		rij = 0;
		kolom = 0;

		VulArray();
		tellerRij();
		tellerKolom();
	}
	
	public void VulArray() {
		for (int rij = 0; rij < 6; rij++) {
			for (int kolom = 0; kolom < 7; kolom++) {
				// Grote rondjes
				kleurArrayBord[rij] [kolom] = kleurBordRondjes;
				kleurBordControl[rij] [kolom] = true;
			}
		}
	}

	public void tellerRij() {
		for (int i = 0; i < 6; i++ ) {
			arrayTellerRijGeel[i] = 0;
			arrayTellerRijRood[i] = 0;
		}
	}
	
	public void tellerKolom() {
		for (int i = 0; i < 7; i++) {
			arrayTellerKolomGeel[i] = 0;
			arrayTellerKolomRood[i] = 0;
		}
	}
	
	public void beurt() {
		if (y == 5) {
			if (boolBeurt == true && kleurBordControl[y] [x] == true) {
				kleurArrayBord[y] [x] = kleurRood;
				kleurBordControl[y] [x] = false;
				boolBeurt = false;
			} else if (boolBeurt == false && kleurBordControl[y] [x] == true) { 
				kleurArrayBord[y] [x] = kleurGeel;
				kleurBordControl[y] [x] = false;
				boolBeurt = true;
			} 
		} else {
			if (kleurArrayBord[y + 1] [x]!= kleurBordRondjes) {
				if (boolBeurt == true && kleurBordControl[y] [x] == true) {
					kleurArrayBord[y] [x] = kleurRood;
					kleurBordControl[y] [x] = false;
					boolBeurt = false;
				} else if (boolBeurt == false && kleurBordControl[y] [x] == true) { 
					kleurArrayBord[y] [x] = kleurGeel;
					kleurBordControl[y] [x] = false;
					boolBeurt = true;
				} 
			}
		}
	}

	public void controlerenRij(int rij, int[] arrayTeller, Color kleur, String kleurGewonnen) {
		arrayTeller[rij] = 0;
		for (int i = 0; i < 7; i++) {
			if (kleurArrayBord[rij][i] == kleur) {
				arrayTeller[rij] += 1;
			} else if (kleurArrayBord[rij][i] != kleur) {
				arrayTeller[rij] = 0;
			}
			if (arrayTeller[rij] == 4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
		}
	}

	public void controlerenKolom(int kolom, int[] arrayTeller, Color kleur, String kleurGewonnen) {
		arrayTeller[kolom] = 0;
		for (int i = 0; i < 6; i++) {
			if (kleurArrayBord[i][kolom] == kleur) {
				arrayTeller[kolom] += 1;
			} else if (kleurArrayBord[i][kolom] != kleur) {
				arrayTeller[kolom] = 0;
			}
			if (arrayTeller[kolom] == 4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
		}
	}
	
	public void diagonaalLR( int rDiag, Color kleur, String kleurGewonnen) {
		int teller=0;
		for (int r= rDiag ; r>=0; r--) {
			if (kleurArrayBord[r][rDiag-r] == kleur) {
				teller++;
			} else if (kleurArrayBord[r][rDiag-r] != kleur) {
				teller=0;
			}
			if (teller ==4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
			
		}
		
	}
	
	public void diagonaalLR2(int DiagPlus, Color kleur, String kleurGewonnen) {
		int teller=0;
		for (int r= 5; r>=(0+DiagPlus-1); r--) {
			if (kleurArrayBord[r][5-r+DiagPlus] == kleur) {
				teller++;
			} else if (kleurArrayBord[r][5-r+DiagPlus] != kleur) {
				teller=0;
			}
			if (teller ==4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
			
		}
		
	}
	
	public void diagonaalRL( int rDiag, Color kleur, String kleurGewonnen) {
		int teller=0;
		for (int r= rDiag ; r>=0; r--) {
			if (kleurArrayBord[r][r] == kleur) {
				teller++;
			} else if (kleurArrayBord[r][r] != kleur) {
				teller=0;
			}
			if (teller ==4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
			
		}
		
	}
	
	public void diagonaalRL2( int rDiag, Color kleur, String kleurGewonnen) {
		int teller=0;
		for (int r= rDiag ; r>=0; r--) {
			if (kleurArrayBord[r][r+1] == kleur) {
				teller++;
			} else if (kleurArrayBord[r][r+1] != kleur) {
				teller=0;
			}
			if (teller ==4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
			
		}
		
	}
	public void diagonaalRL3( int rDiag, Color kleur, String kleurGewonnen) {
		int teller=0;
		for (int r= rDiag ; r>=0; r--) {
			if (kleurArrayBord[r][r+2] == kleur) {
				teller++;
			} else if (kleurArrayBord[r][r+2] != kleur) {
				teller=0;
			}
			if (teller ==4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
			
		}
		
	}
	public void diagonaalRL4( int rDiag, Color kleur, String kleurGewonnen) {
		int teller=0;
		for (int r= rDiag ; r>=0; r--) {
			if (kleurArrayBord[r][r+3] == kleur) {
				teller++;
			} else if (kleurArrayBord[r][r+3] != kleur) {
				teller=0;
			}
			if (teller ==4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
			
		}
		
	}
	public void diagonaalRL5( int rDiag, Color kleur, String kleurGewonnen) {
		int teller=0;
		for (int r= rDiag ; r>=1; r--) {
			if (kleurArrayBord[r][r-1] == kleur) {
				teller++;
			} else if (kleurArrayBord[r][r-1] != kleur) {
				teller=0;
			}
			if (teller ==4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
			
		}
		
	}
	public void diagonaalRL6( int rDiag, Color kleur, String kleurGewonnen) {
		int teller=0;
		for (int r= rDiag ; r>=2; r--) {
			if (kleurArrayBord[r][r-2] == kleur) {
				teller++;
			} else if (kleurArrayBord[r][r-2] != kleur) {
				teller=0;
			}
			if (teller ==4) {
				Uitslag = kleurGewonnen + " heeft gewonnen";
			}
			
		}
		
	}
	public class MyListener extends MouseInputAdapter {
		public void mousePressed(MouseEvent e) {
			x = (e.getX() / 100) - 1;
			y = (e.getY() / 100) - 1;
			beurt();
			diagonaalRL6(5, kleurGeel, "geel");
			diagonaalRL6(5, kleurRood, "rood");
			diagonaalRL5(5, kleurGeel, "geel");
			diagonaalRL5(5, kleurRood, "rood");
			diagonaalRL4(3, kleurGeel, "geel");
			diagonaalRL4(3, kleurRood, "rood");
			diagonaalRL3(4, kleurGeel, "geel");
			diagonaalRL3(4, kleurRood, "rood");
			diagonaalRL2(5, kleurGeel, "geel");
			diagonaalRL2(5, kleurRood, "rood");
			diagonaalRL(5, kleurRood, "rood");
			diagonaalRL(5, kleurGeel, "geel");
			diagonaalLR(5, kleurRood,"rood");
			diagonaalLR(5, kleurGeel,"geel");
			diagonaalLR(4, kleurRood,"rood");
			diagonaalLR(4, kleurGeel,"geel");
			diagonaalLR(3, kleurRood,"rood");
			diagonaalLR(3, kleurGeel,"geel");
			diagonaalLR2(1, kleurRood,"rood");
			diagonaalLR2(1, kleurGeel,"geel");
			diagonaalLR2(2, kleurRood,"rood");
			diagonaalLR2(2, kleurGeel,"Geel");
			diagonaalLR2(3, kleurRood,"rood");
			diagonaalLR2(3, kleurGeel,"Geel");
			for (int rij = 0; rij < 6; rij++) {
				controlerenRij(rij, arrayTellerRijRood, kleurRood, "Rood");
				controlerenRij(rij, arrayTellerRijGeel, kleurGeel, "Geel");
			}
			for (int kolom = 0; kolom < 7; kolom++) {
				controlerenKolom(kolom, arrayTellerKolomRood, kleurRood, "Rood");
				controlerenKolom(kolom, arrayTellerKolomGeel, kleurGeel, "Geel");
			}
			repaint();
		}
	}

	public void paintComponent( Graphics g ) {
		super.paintComponent( g );
		g.setColor(kleurBord);
		g.fillRect(100, 100, 700 ,620);

		g.drawString("X is: " + x, 100,100);
		g.drawString("Y is: " + y, 200,100);

		g.drawString("" + Uitslag, 400, 100);

		for (int rij = 0; rij < 6; rij++) {
			for (int kolom = 0; kolom < 7; kolom++) {
				g.setColor(kleurArrayBord[rij] [kolom]);
				g.fillOval(120 + 100 * kolom, 120 + 100 * rij, 60, 60);
			}
		}

	}
}
